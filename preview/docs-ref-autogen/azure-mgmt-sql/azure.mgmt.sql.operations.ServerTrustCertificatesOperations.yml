### YamlMime:PythonClass
uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations
name: ServerTrustCertificatesOperations
fullName: azure.mgmt.sql.operations.ServerTrustCertificatesOperations
module: azure.mgmt.sql.operations
inheritances:
- builtins.object
summary: 'ServerTrustCertificatesOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: ServerTrustCertificatesOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Uploads a server trust certificate from box to Sql Managed Instance.
  signature: 'begin_create_or_update(resource_group_name: str, managed_instance_name:
    str, certificate_name: str, parameters: azure.mgmt.sql.models._models_py3.ServerTrustCertificate,
    **kwargs: Any) -> azure.core.polling._poller.LROPoller[azure.mgmt.sql.models._models_py3.ServerTrustCertificate]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of of the certificate to upload.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The server trust certificate info.
    isRequired: true
    types:
    - <xref:azure.mgmt.sql.models.ServerTrustCertificate>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either ServerTrustCertificate
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.sql.models.ServerTrustCertificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.begin_delete
  name: begin_delete
  summary: Deletes a server trust certificate that was uploaded from box to Sql Managed
    Instance.
  signature: 'begin_delete(resource_group_name: str, managed_instance_name: str, certificate_name:
    str, **kwargs: Any) -> azure.core.polling._poller.LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of of the certificate to delete.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.get
  name: get
  summary: Gets a server trust certificate that was uploaded from box to Sql Managed
    Instance.
  signature: 'get(resource_group_name: str, managed_instance_name: str, certificate_name:
    str, **kwargs: Any) -> azure.mgmt.sql.models._models_py3.ServerTrustCertificate'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: Name of of the certificate to get.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: ServerTrustCertificate, or the result of cls(response)
    types:
    - <xref:azure.mgmt.sql.models.ServerTrustCertificate>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.list_by_instance
  name: list_by_instance
  summary: 'Gets a list of the server trust certificates which are used for secure
    communication between

    SQL On-Prem instance and the given Sql Managed Instance.'
  signature: 'list_by_instance(resource_group_name: str, managed_instance_name: str,
    **kwargs: Any) -> Iterable[azure.mgmt.sql.models._models_py3.ServerTrustCertificatesListResult]'
  parameters:
  - name: resource_group_name
    description: 'The name of the resource group that contains the resource. You can

      obtain this value from the Azure Resource Manager API or the portal.'
    isRequired: true
    types:
    - <xref:str>
  - name: managed_instance_name
    description: The name of the managed instance.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either ServerTrustCertificatesListResult
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.sql.models.ServerTrustCertificatesListResult>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.sql.operations.ServerTrustCertificatesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.sql.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.12\\x64\\lib\\site-packages\\azure\\mgmt\\sql\\models\\__init__.py'>
