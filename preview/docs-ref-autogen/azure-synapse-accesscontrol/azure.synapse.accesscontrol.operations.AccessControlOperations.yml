### YamlMime:PythonClass
uid: azure.synapse.accesscontrol.operations.AccessControlOperations1
name: AccessControlOperations
fullName: azure.synapse.accesscontrol.operations.AccessControlOperations
module: azure.synapse.accesscontrol.operations
inheritances:
- builtins.object
summary: 'AccessControlOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: AccessControlOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.create_role_assignment
  name: create_role_assignment
  summary: Create role assignment.
  signature: create_role_assignment(create_role_assignment_options, **kwargs)
  parameters:
  - name: create_role_assignment_options
    description: Details of role id and object id.
    isRequired: true
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentOptions>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.delete_role_assignment_by_id
  name: delete_role_assignment_by_id
  summary: Delete role assignment by role assignment Id.
  signature: delete_role_assignment_by_id(role_assignment_id, **kwargs)
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: None, or the result of cls(response)
    types:
    - <xref:None>
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.get_caller_role_assignments
  name: get_caller_role_assignments
  summary: List role assignments of the caller.
  signature: get_caller_role_assignments(**kwargs)
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: list of str, or the result of cls(response)
    types:
    - <xref:list>[<xref:str>]
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.get_role_assignment_by_id
  name: get_role_assignment_by_id
  summary: Get role assignment by role assignment Id.
  signature: get_role_assignment_by_id(role_assignment_id, **kwargs)
  parameters:
  - name: role_assignment_id
    description: The ID of the role assignment.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.get_role_assignments
  name: get_role_assignments
  summary: List role assignments.
  signature: get_role_assignments(role_id=None, principal_id=None, continuation_token_parameter=None,
    **kwargs)
  parameters:
  - name: role_id
    description: Synapse Built-In Role Id.
    defaultValue: None
    types:
    - <xref:str>
  - name: principal_id
    description: Object ID of the AAD principal or security-group.
    defaultValue: None
    types:
    - <xref:str>
  - name: continuation_token_parameter
    description: Continuation token.
    defaultValue: None
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: list of RoleAssignmentDetails, or the result of cls(response)
    types:
    - <xref:list>[<xref:azure.synapse.accesscontrol.models.RoleAssignmentDetails>]
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.get_role_definition_by_id
  name: get_role_definition_by_id
  summary: Get role by role Id.
  signature: get_role_definition_by_id(role_id, **kwargs)
  parameters:
  - name: role_id
    description: Synapse Built-In Role Id.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: SynapseRole, or the result of cls(response)
    types:
    - <xref:azure.synapse.accesscontrol.models.SynapseRole>
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.get_role_definitions
  name: get_role_definitions
  summary: List roles.
  signature: get_role_definitions(**kwargs)
  parameters:
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: An iterator like instance of either RolesListResponse or the result
      of cls(response)
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.synapse.accesscontrol.models.RolesListResponse>]
attributes:
- uid: azure.synapse.accesscontrol.operations.AccessControlOperations.models
  name: models
  signature: 'models = <module ''azure.synapse.accesscontrol.models'' from ''C:\\hostedtoolcache\\windows\\Python\\3.6.8\\x64\\lib\\site-packages\\azure\\synapse\\accesscontrol\\models\\__init__.py''>'
