### YamlMime:PythonClass
uid: azure.mgmt.storagecache.models.NfsAccessRule
name: NfsAccessRule
fullName: azure.mgmt.storagecache.models.NfsAccessRule
module: azure.mgmt.storagecache.models
inheritances:
- msrest.serialization.Model
summary: 'Rule to place restrictions on portions of the cache namespace being presented
  to clients.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'NfsAccessRule(*, scope: str, access: str, filter: Optional[str] = None,
    suid: Optional[bool] = None, submount_access: Optional[bool] = None, root_squash:
    Optional[bool] = None, anonymous_uid: Optional[str] = None, anonymous_gid: Optional[str]
    = None, **kwargs)'
  parameters:
  - name: scope
    description: 'Required. Scope for this rule. The scope and filter determine which
      clients match

      the rule. Possible values include: "default", "network", "host".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:storage_cache_management_client.models.NfsAccessRuleScope>
  - name: filter
    description: 'Filter applied to the scope for this rule. The filter''s format
      depends on its

      scope. ''default'' scope matches all clients and has no filter value. ''network''
      scope takes a

      filter in CIDR format (for example, 10.99.1.0/24). ''host'' takes an IP address
      or fully

      qualified domain name as filter. If a client does not match any filter rule
      and there is no

      default rule, access is denied.'
    isRequired: true
    types:
    - <xref:str>
  - name: access
    description: 'Required. Access allowed by this rule. Possible values include:
      "no", "ro",

      "rw".'
    isRequired: true
    types:
    - <xref:str>
    - <xref:storage_cache_management_client.models.NfsAccessRuleAccess>
  - name: suid
    description: Allow SUID semantics.
    isRequired: true
    types:
    - <xref:bool>
  - name: submount_access
    description: 'For the default policy, allow access to subdirectories under the
      root

      export. If this is set to no, clients can only mount the path ''/''. If set
      to yes, clients can

      mount a deeper path, like ''/a/b''.'
    isRequired: true
    types:
    - <xref:bool>
  - name: root_squash
    description: Map root accesses to anonymousUID and anonymousGID.
    isRequired: true
    types:
    - <xref:bool>
  - name: anonymous_uid
    description: 'UID value that replaces 0 when rootSquash is true. 65534 will be
      used if

      not provided.'
    isRequired: true
    types:
    - <xref:str>
  - name: anonymous_gid
    description: 'GID value that replaces 0 when rootSquash is true. This will use
      the

      value of anonymousUID if not provided.'
    isRequired: true
    types:
    - <xref:str>
